# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

<<<<<<< HEAD
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
=======
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
>>>>>>> master
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices = 
  {
    root = {
      name = "root";
      device = "/dev/nvme0n1p2";
      preLVM = true;
    };
  };

  fileSystems."/" =
<<<<<<< HEAD
    { device = "/dev/disk/by-uuid/ce9ed1c0-d05b-4460-acb6-9d3f3857c9fa";
      fsType = "btrfs";
=======
    { device = "/dev/disk/by-uuid/9e02fc72-fbec-409c-806e-eb41067d44db";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-1ef3982a-0bd2-44d2-9435-0505341e3716".device = "/dev/disk/by-uuid/1ef3982a-0bd2-44d2-9435-0505341e3716";

  fileSystems."/nix/store" =
    { device = "/nix/store";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/2E09-D1AE";
      fsType = "vfat";
>>>>>>> master
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A35C-7D5C";
      fsType = "vfat";
    };

  swapDevices =
<<<<<<< HEAD
    [ { device = "/dev/disk/by-uuid/d67e6993-9399-444f-af49-e87f65d130c5"; }
=======
    [ { device = "/dev/disk/by-uuid/6f9dd312-cce5-4d2e-8fdc-4d42bb15e146"; }
>>>>>>> master
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp111s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
<<<<<<< HEAD
=======
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
>>>>>>> master
}
