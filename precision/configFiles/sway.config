
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $alt Mod1
# Your preferred terminal emulator
set $term termite
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu rofi -show drun  -modi "drun,calc,window,ssh" -show-icons -plugin-path ~/.config/rofi/lib | xargs swaymsg exec
set $menu wofi | xargs swaymsg exec

set $laptop eDP-1

### Output configuration
#
# Default wallpaper
#output * bg ~/.config/sway/backgrounds/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 mode 3840x2160@60Hz scale 2 
output DP-6 mode 2560x1440@60Hz

focus output $laptop
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
    xkb_options altwin:swap_lalt_lwin,caps:ctrl_modifier,rupeesign:4		 
    repeat_delay 180
    repeat_rate 50
}

default_border pixel 1
default_floating_border pixel 1
floating_minimum_size 200 x 150

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+shift+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'


    # Clipboard
    bindsym $mod+$alt+c exec "CM_LAUNCHER=rofi CM_DIR=~/.local/share CM_HISTLENGTH=20 clipmenu"
    bindsym $mod+$alt+d exec "CM_DIR=~/.local/share clipdel -d \".*\""


    # Fn keys
    bindsym XF86AudioRaiseVolume exec --no-startup-id bash -c "amixer sset Master 5%+"
    bindsym XF86AudioLowerVolume exec --no-startup-id bash -c "amixer sset Master 5%-"
    bindsym XF86AudioMute exec --no-startup-id bash -c "amixer sset Master toggle"
    # bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

    bindsym XF86MonBrightnessUp exec sh -c "brightnessctl set 3%+"
    bindsym XF86MonBrightnessDown exec sh -c "brightnessctl set 3%-"


    # Lock
    bindsym $mod+$alt+F12 exec "swaylock -f -c 000000"

    # Logout
    bindsym $mod+Shift+Escape exec "wlogout"

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1 "Web"
    bindsym $mod+2 workspace 2 "Dev"
    bindsym $mod+3 workspace 3 "Chat"
    bindsym $mod+4 workspace 4 "Org"
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6 "Mail"
    bindsym $mod+7 workspace 7 "Feeds"
    bindsym $mod+8 workspace 8 "Music"
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10

    bindsym $mod+n workspace next
    bindsym $mod+shift+n workspace prev
    bindsym $mod+space workspace back_and_forth

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1 "Web"
    bindsym $mod+Shift+2 move container to workspace 2 "Dev"
    bindsym $mod+Shift+3 move container to workspace 3 "Chat"
    bindsym $mod+Shift+4 move container to workspace 4 "Org"
    bindsym $mod+Shift+5 move container to workspace 5 
    bindsym $mod+Shift+6 move container to workspace 6 "Mail"
    bindsym $mod+Shift+7 move container to workspace 7 "Feeds"
    bindsym $mod+Shift+8 move container to workspace 8 "Music"
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

   # Move workspace to output
   bindsym $mod+$alt+$right move workspace to output right
   bindsym $mod+$alt+$left move workspace to output left
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+| or $mod+V, for horizontal and vertical splits
    # respectively.
    bindsym $mod+bar splith
    bindsym $mod+Shift+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+t floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+t focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent 
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


#
# Assignments
#

assign [class="Thunderbird"] 6 "Mail"
assign [class="Hexchat"] 3 "Chat"
assign [class="Discord"] 3 "Chat"
assign [class="Signal"] 3 "Chat"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }

    swaybar_command waybar
}
